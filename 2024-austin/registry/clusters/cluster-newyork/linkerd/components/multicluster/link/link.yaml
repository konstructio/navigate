apiVersion: v1
data:
  kubeconfig: YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKbFJFTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVelRVUmpNRTFxVVhsT1JGbDNTR2hqVGsxcVVYZE5ha0UwVFdwQmVrMUVVVEpYYUdOT1RYcFJkMDFxUVRGTmFrRjZUVVJSTWdwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXpUVVJqTUUxcVVYbE9SRmwzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZVYnpoSlZqUnNObVoxZVZSd2VVSnpSVzVxU1VoblNERm5jV1ppTkVkbVVrbHhOVFJWVHpCRlp6UUtabkZ2YW5WT0wyOVlSVFUyVVdsRmQxVm5ka05WYkdkUlRXeGthbkZIUWxOdk4xUkJOR2hzUmtkeGQwaHZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWV0p1VjNvNFZrcDNUSEptTW5ONmVHZEdUbTV4Q25SVmVHeHdhalIzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5SUVhkU1owbG9RVTlXT1cwd1RWSnRTVTlCY1V4SmRYb3hXVWxsUVc5MlUwUm9OV1pOZW1RS01HVlVaV3BDZUV4WlMzQmpRV2xGUVdzeFpWUnRNVGt6WlZaeVIweHZVbGRNTUVKWVkyTlBla3hNUVhscE5sbFVWSEIzVkdwQ1IzSk9UbXM5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBzZXJ2ZXI6IGh0dHBzOi8vNzQuMjIwLjE4LjIxNzo2NDQzCiAgbmFtZTogY2x1c3Rlci1sb25kb24KY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGNsdXN0ZXItbG9uZG9uCiAgICB1c2VyOiBjbHVzdGVyLWxvbmRvbgogIG5hbWU6IGNsdXN0ZXItbG9uZG9uCmN1cnJlbnQtY29udGV4dDogY2x1c3Rlci1sb25kb24Ka2luZDogQ29uZmlnCnByZWZlcmVuY2VzOiB7fQp1c2VyczoKLSBuYW1lOiBjbHVzdGVyLWxvbmRvbgogIHVzZXI6CiAgICBjbGllbnQtY2VydGlmaWNhdGUtZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVSnJWRU5EUVZSbFowRjNTVUpCWjBsSlJHNDBlR2RtY0RCYU56QjNRMmRaU1V0dldrbDZhakJGUVhkSmQwbDZSV2hOUWpoSFFURlZSVUYzZDFrS1lYcE9la3hYVG5OaFYxWjFaRU14YWxsVlFYaE9la0V6VGtSSk1FMXFVVEpOUWpSWVJGUkpNRTFFU1hkUFJFbDNUWHBCTUU1c2IxaEVWRWt4VFVSSmR3cE9la2wzVFhwQk1FNXNiM2ROUkVWWVRVSlZSMEV4VlVWRGFFMVBZek5zZW1SSFZuUlBiVEZvWXpOU2JHTnVUWGhHVkVGVVFtZE9Wa0pCVFZSRVNFNDFDbU16VW14aVZIQm9Xa2N4Y0dKcVFscE5RazFIUW5seFIxTk5ORGxCWjBWSFEwTnhSMU5OTkRsQmQwVklRVEJKUVVKRFUwZGtNRWhqYVVkTVZuSkRPVElLYURsVFNFRjJhbXhFVEdWMFYzaGFVVmhKTUdjMFpVbDNWazAzUTI4NFlsZ3ZiREpMYzJOVGRVZGhMMjlVVFd0aFVFSXZOREoxTkVFNFJFOU9VMVZuVEFvNGJFMTNlbmxUYWxORVFrZE5RVFJIUVRGVlpFUjNSVUl2ZDFGRlFYZEpSbTlFUVZSQ1owNVdTRk5WUlVSRVFVdENaMmR5UW1kRlJrSlJZMFJCYWtGbUNrSm5UbFpJVTAxRlIwUkJWMmRDVWxOdVYwa3dkWGxRVlRSNlRFOVNWRFozTUhFellUaEdSa1YyZWtGTFFtZG5jV2hyYWs5UVVWRkVRV2RPU1VGRVFrWUtRV2xCWlRCQmRXaGhNWGx0VW5SdE4ycFFUR2s1UmxCdVR6aG9LMk5OT1ZsWVdpOWFha1EyVTBWb05VZ3JkMGxvUVUxeldGSm5UekpVZFhCdVNWQjJVUXBuWVU1TFpGVlFWbXBDUlZaNU1qUkJSM1kzTjA1NmFqWnlVVUZGQ2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVSmtla05EUVZJeVowRjNTVUpCWjBsQ1FVUkJTMEpuWjNGb2EycFBVRkZSUkVGcVFXcE5VMFYzU0hkWlJGWlJVVVJFUW1oeVRUTk5kRmt5ZUhBS1dsYzFNRXhYVG1oUlJFVXpUVVJqTUUxcVVYbE9SRmwzU0doalRrMXFVWGROYWtFMFRXcEJlazFFVVRKWGFHTk9UWHBSZDAxcVFURk5ha0Y2VFVSUk1ncFhha0ZxVFZORmQwaDNXVVJXVVZGRVJFSm9jazB6VFhSWk1uaHdXbGMxTUV4WFRtaFJSRVV6VFVSak1FMXFVWGxPUkZsM1YxUkJWRUpuWTNGb2EycFBDbEJSU1VKQ1oyZHhhR3RxVDFCUlRVSkNkMDVEUVVGUlNFdzNjMjVVSzFoMllrcERXVlZqZDBkU1NVbHZUQzlvWVRVMFMyVTJkazlwUWxWNFJVSmhORGdLVnpVd00wdDJOa0pqYkU5aE5GTjJVbVl3VEVnMU1YRkROVWxCYWs5NWVWWktWM1F6ZERCbWNsQkJVWE52TUVsM1VVUkJUMEpuVGxaSVVUaENRV1k0UlFwQ1FVMURRWEZSZDBSM1dVUldVakJVUVZGSUwwSkJWWGRCZDBWQ0wzcEJaRUpuVGxaSVVUUkZSbWRSVlZWd01XbE9USE5xTVU5TmVYcHJWU3R6VGt0MENqSjJRbEpTVERoM1EyZFpTVXR2V2tsNmFqQkZRWGRKUkZOQlFYZFNVVWxvUVUxSVppOXpSMVJLUnpGTlFucERTRll2Vm1KSE1YaDVSRlJMTVhFclpXOEtSVkJsUTJSYWJqaDRWbll4UVdsQ1ozbHFjM2dyV0ZsV1lYb3daVWN3Tlc4d1UzcG5hM0F3ZVZkcGFVRkNjMWh6ZUVaTGFIaDZURzh3VVQwOUNpMHRMUzB0UlU1RUlFTkZVbFJKUmtsRFFWUkZMUzB0TFMwSwogICAgY2xpZW50LWtleS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJGUXlCUVVrbFdRVlJGSUV0RldTMHRMUzB0Q2sxSVkwTkJVVVZGU1V0dE1qSm5XRXMyWVV4cGREVmpPREJsZDJWdllVdFZXVGhsVUhadFl6aHVXVE50T1RReFQzTjBkVTV2UVc5SFEwTnhSMU5OTkRrS1FYZEZTRzlWVVVSUlowRkZTa2xhTTFGa2VVbFpkRmR6VEROaFNERkpZME1yVDFWTmREWXhZa1pzUW1OcVUwUm9OR3BDVlhwelMycDRkR1lyV0ZseGVBcDRTelJhY2l0b1RYbFNiemhJTDJwaE4yZEVkMDAwTVVwVFFYWjVWWHBFVUVwQlBUMEtMUzB0TFMxRlRrUWdSVU1nVUZKSlZrRlVSU0JMUlZrdExTMHRMUW89Cgo=
kind: Secret
metadata:
  creationTimestamp: null
  name: cluster-credentials-cluster-newyork
  namespace: linkerd-multicluster
type: mirror.linkerd.io/remote-kubeconfig
---
apiVersion: multicluster.linkerd.io/v1alpha1
kind: Link
metadata:
  name: cluster-newyork
  namespace: linkerd-multicluster
spec:
  clusterCredentialsSecret: cluster-credentials-cluster-newyork
  gatewayAddress: 74.220.21.90
  gatewayIdentity: linkerd-gateway.linkerd-multicluster.serviceaccount.identity.linkerd.cluster.local
  gatewayPort: "4143"
  probeSpec:
    path: /ready
    period: 3s
    port: "4191"
  selector:
    matchLabels:
      mirror.linkerd.io/exported: "true"
  targetClusterDomain: cluster.local
  targetClusterLinkerdNamespace: linkerd
  targetClusterName: cluster-newyork
---
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-service-mirror-access-local-resources-cluster-newyork
  labels:
    linkerd.io/extension: multicluster
    component: service-mirror
    mirror.linkerd.io/cluster-name: cluster-newyork
rules:
- apiGroups: [""]
  resources: ["endpoints", "services"]
  verbs: ["list", "get", "watch", "create", "delete", "update"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-service-mirror-access-local-resources-cluster-newyork
  labels:
    linkerd.io/extension: multicluster
    component: service-mirror
    mirror.linkerd.io/cluster-name: cluster-newyork
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-service-mirror-access-local-resources-cluster-newyork
subjects:
- kind: ServiceAccount
  name: linkerd-service-mirror-cluster-newyork
  namespace: linkerd-multicluster
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-service-mirror-read-remote-creds-cluster-newyork
  namespace: linkerd-multicluster
  labels:
    linkerd.io/extension: multicluster
    component: service-mirror
    mirror.linkerd.io/cluster-name: cluster-newyork
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["cluster-credentials-cluster-newyork"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["multicluster.linkerd.io"]
    resources: ["links"]
    verbs: ["list", "get", "watch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-service-mirror-read-remote-creds-cluster-newyork
  namespace: linkerd-multicluster
  labels:
    linkerd.io/extension: multicluster
    component: service-mirror
    mirror.linkerd.io/cluster-name: cluster-newyork
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: linkerd-service-mirror-read-remote-creds-cluster-newyork
subjects:
  - kind: ServiceAccount
    name: linkerd-service-mirror-cluster-newyork
    namespace: linkerd-multicluster
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-service-mirror-cluster-newyork
  namespace: linkerd-multicluster
  labels:
    linkerd.io/extension: multicluster
    component: service-mirror
    mirror.linkerd.io/cluster-name: cluster-newyork
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    linkerd.io/extension: multicluster
    component: service-mirror
    mirror.linkerd.io/cluster-name: cluster-newyork
  name: linkerd-service-mirror-cluster-newyork
  namespace: linkerd-multicluster
spec:
  replicas: 1
  selector:
    matchLabels:
      component: linkerd-service-mirror
      mirror.linkerd.io/cluster-name: cluster-newyork
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: "0"
      labels:
        component: linkerd-service-mirror
        mirror.linkerd.io/cluster-name: cluster-newyork
    spec:
      containers:
      - args:
        - service-mirror
        - -log-level=info
        - -event-requeue-limit=3
        - -namespace=linkerd-multicluster
        - -enable-pprof=false
        - cluster-newyork
        image: cr.l5d.io/linkerd/controller:stable-2.13.6
        name: service-mirror
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 2103
          seccompProfile:
            type: RuntimeDefault
        ports:
        - containerPort: 9999
          name: admin-http
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-service-mirror-cluster-newyork
---
apiVersion: v1
kind: Service
metadata:
  name: probe-gateway-cluster-newyork
  namespace: linkerd-multicluster
  labels:
    mirror.linkerd.io/mirrored-gateway: "true"
    mirror.linkerd.io/cluster-name: cluster-newyork
spec:
  ports:
  - name: mc-probe
    port: 4191
    protocol: TCP
---
